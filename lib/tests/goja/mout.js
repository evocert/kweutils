//All code is library agnostic and consist mostly of helper methods that aren't directly related with the DOM, the purpose of this library isn't to replace Dojo, jQuery, YUI, Mootools, etc, but to provide modular solutions for common problems that aren't solved by most of them. Consider it as a crossbrowser JavaScript standard library.
//Main goals
// increase code reuse;
// be clear (code should be clean/readable);
// be easy to debug;
// be easy to maintain;
// follow best practices;
// follow standards when possible;
// don't convert JavaScript into another language!
// be compatible with other frameworks;
// be modular;
// have unit tests for all modules;
// work on multiple environments (IE7+, modern browsers, node.js);
//http://moutjs.com/
//https://github.com/mout/mout
/*
//seperate:
define([
	"module",
	"console",
	"cyclejs",
	"mout/array/append",
	"mout/array/collect",
	"mout/array/combine",
	"mout/array/compact",
	"mout/array/contains",
	"mout/array/difference",
	"mout/array/equals",
	"mout/array/every",
	"mout/array/filter",
	"mout/array/find",
	"mout/array/findIndex",
	"mout/array/findLast",
	"mout/array/findLastIndex",
	"mout/array/flatten",
	"mout/array/forEach",
	"mout/array/groupBy",
	"mout/array/indexOf",
	"mout/array/indicesOf",
	"mout/array/insert",
	"mout/array/intersection",
	"mout/array/invoke",
	"mout/array/join",
	"mout/array/last",
	"mout/array/lastIndexOf",
	"mout/array/map",
	"mout/array/max",
	"mout/array/min",
	"mout/array/pick",
	"mout/array/pluck",
	"mout/array/range",
	"mout/array/reduce",
	"mout/array/reduceRight",
	"mout/array/reject",
	"mout/array/remove",
	"mout/array/removeAll",
	"mout/array/repeat",
	"mout/array/reverse",
	"mout/array/shuffle",
	"mout/array/slice",
	"mout/array/some",
	"mout/array/sort",
	"mout/array/sortBy",
	"mout/array/split",
	"mout/array/take",
	"mout/array/toLookup",
	"mout/array/union",
	"mout/array/unique",
	"mout/array/xor",
	"mout/array/zip",
	"mout/array",
	"mout/collection/contains",
	"mout/collection/every",
	"mout/collection/filter",
	"mout/collection/find",
	"mout/collection/forEach",
	"mout/collection/make_",
	"mout/collection/map",
	"mout/collection/max",
	"mout/collection/min",
	"mout/collection/pluck",
	"mout/collection/reduce",
	"mout/collection/reject",
	"mout/collection/size",
	"mout/collection/some",
	"mout/collection",
	"mout/date/dayOfTheYear",
	"mout/date/diff",
	"mout/date/i18n/de-DE",
	"mout/date/i18n/en-US",
	"mout/date/i18n/pt-BR",
	"mout/date/i18n/ru",
	"mout/date/i18n_",
	"mout/date/isLeapYear",
	"mout/date/isSame",
	"mout/date/parseIso",
	"mout/date/quarter",
	"mout/date/startOf",
	"mout/date/strftime",
	"mout/date/timezoneAbbr",
	"mout/date/timezoneOffset",
	"mout/date/totalDaysInMonth",
	"mout/date/totalDaysInYear",
	"mout/date/weekOfTheYear",
	"mout/date",
	"mout/function/after",
	"mout/function/awaitDelay",
	"mout/function/bind",
	"mout/function/compose",
	"mout/function/constant",
	"mout/function/debounce",
	"mout/function/func",
	"mout/function/identity",
	"mout/function/makeIterator_",
	"mout/function/memoize",
	"mout/function/partial",
	"mout/function/prop",
	"mout/function/series",
	"mout/function/throttle",
	"mout/function/timeout",
	"mout/function/times",
	"mout/function/wrap",
	"mout/function",
	"mout/index",
	"mout/lang/clone",
	"mout/lang/createObject",
	"mout/lang/ctorApply",
	"mout/lang/deepClone",
	"mout/lang/deepEquals",
	"mout/lang/defaults",
	"mout/lang/GLOBAL",
	"mout/lang/inheritPrototype",
	"mout/lang/is",
	"mout/lang/isArguments",
	"mout/lang/isArray",
	"mout/lang/isBoolean",
	"mout/lang/isDate",
	"mout/lang/isEmpty",
	"mout/lang/isFinite",
	"mout/lang/isFunction",
	"mout/lang/isInteger",
	"mout/lang/isKind",
	"mout/lang/isNaN",
	"mout/lang/isnt",
	"mout/lang/isNull",
	"mout/lang/isNumber",
	"mout/lang/isObject",
	"mout/lang/isPlainObject",
	"mout/lang/isPrimitive",
	"mout/lang/isRegExp",
	"mout/lang/isString",
	"mout/lang/isUndefined",
	"mout/lang/kindOf",
	"mout/lang/toArray",
	"mout/lang/toNumber",
	"mout/lang/toString",
	"mout/lang",
	"mout/math/ceil",
	"mout/math/clamp",
	"mout/math/countSteps",
	"mout/math/floor",
	"mout/math/inRange",
	"mout/math/isNear",
	"mout/math/lerp",
	"mout/math/loop",
	"mout/math/map",
	"mout/math/norm",
	"mout/math/overflow",
	"mout/math/round",
	"mout/math",
	"mout/number/abbreviate",
	"mout/number/currencyFormat",
	"mout/number/enforcePrecision",
	"mout/number/isNaN",
	"mout/number/MAX_INT",
	"mout/number/MAX_SAFE_INTEGER",
	"mout/number/MAX_UINT",
	"mout/number/MIN_INT",
	"mout/number/nth",
	"mout/number/ordinal",
	"mout/number/pad",
	"mout/number/rol",
	"mout/number/ror",
	"mout/number/sign",
	"mout/number/toInt",
	"mout/number/toUInt",
	"mout/number/toUInt31",
	"mout/number",
	"mout/object/bindAll",
	"mout/object/contains",
	"mout/object/deepFillIn",
	"mout/object/deepMatches",
	"mout/object/deepMixIn",
	"mout/object/equals",
	"mout/object/every",
	"mout/object/fillIn",
	"mout/object/filter",
	"mout/object/find",
	"mout/object/flatten",
	"mout/object/forIn",
	"mout/object/forOwn",
	"mout/object/functions",
	"mout/object/get",
	"mout/object/has",
	"mout/object/hasOwn",
	"mout/object/keys",
	"mout/object/map",
	"mout/object/matches",
	"mout/object/max",
	"mout/object/merge",
	"mout/object/min",
	"mout/object/mixIn",
	"mout/object/namespace",
	"mout/object/omit",
	"mout/object/pick",
	"mout/object/pluck",
	"mout/object/reduce",
	"mout/object/reject",
	"mout/object/result",
	"mout/object/set",
	"mout/object/size",
	"mout/object/some",
	"mout/object/unset",
	"mout/object/values",
	"mout/object",
	"mout/queryString/contains",
	"mout/queryString/decode",
	"mout/queryString/encode",
	"mout/queryString/getParam",
	"mout/queryString/getQuery",
	"mout/queryString/parse",
	"mout/queryString/setParam",
	"mout/queryString",
	"mout/random/choice",
	"mout/random/guid",
	"mout/random/rand",
	"mout/random/randBit",
	"mout/random/randBool",
	"mout/random/randHex",
	"mout/random/randInt",
	"mout/random/random",
	"mout/random/randSign",
	"mout/random/randString",
	"mout/random",
	"mout/string/camelCase",
	"mout/string/contains",
	"mout/string/crop",
	"mout/string/endsWith",
	"mout/string/escapeHtml",
	"mout/string/escapeRegExp",
	"mout/string/escapeUnicode",
	"mout/string/hyphenate",
	"mout/string/insert",
	"mout/string/interpolate",
	"mout/string/lowerCase",
	"mout/string/lpad",
	"mout/string/ltrim",
	"mout/string/makePath",
	"mout/string/normalizeLineBreaks",
	"mout/string/pascalCase",
	"mout/string/properCase",
	"mout/string/removeNonASCII",
	"mout/string/removeNonWord",
	"mout/string/repeat",
	"mout/string/replace",
	"mout/string/replaceAccents",
	"mout/string/rpad",
	"mout/string/rtrim",
	"mout/string/sentenceCase",
	"mout/string/slugify",
	"mout/string/startsWith",
	"mout/string/stripHtmlTags",
	"mout/string/stripMargin",
	"mout/string/trim",
	"mout/string/truncate",
	"mout/string/typecast",
	"mout/string/unCamelCase",
	"mout/string/underscore",
	"mout/string/unescapeHtml",
	"mout/string/unescapeUnicode",
	"mout/string/unhyphenate",
	"mout/string/upperCase",
	"mout/string/WHITE_SPACES",
	"mout/string",
	"mout/time/convert",
	"mout/time/now",
	"mout/time/parseMs",
	"mout/time/toTimeString",
	"mout/time",
],function(
	module,
	console,
	cyclejs,
	mout_array_append,
	mout_array_collect,
	mout_array_combine,
	mout_array_compact,
	mout_array_contains,
	mout_array_difference,
	mout_array_equals,
	mout_array_every,
	mout_array_filter,
	mout_array_find,
	mout_array_findIndex,
	mout_array_findLast,
	mout_array_findLastIndex,
	mout_array_flatten,
	mout_array_forEach,
	mout_array_groupBy,
	mout_array_indexOf,
	mout_array_indicesOf,
	mout_array_insert,
	mout_array_intersection,
	mout_array_invoke,
	mout_array_join,
	mout_array_last,
	mout_array_lastIndexOf,
	mout_array_map,
	mout_array_max,
	mout_array_min,
	mout_array_pick,
	mout_array_pluck,
	mout_array_range,
	mout_array_reduce,
	mout_array_reduceRight,
	mout_array_reject,
	mout_array_remove,
	mout_array_removeAll,
	mout_array_repeat,
	mout_array_reverse,
	mout_array_shuffle,
	mout_array_slice,
	mout_array_some,
	mout_array_sort,
	mout_array_sortBy,
	mout_array_split,
	mout_array_take,
	mout_array_toLookup,
	mout_array_union,
	mout_array_unique,
	mout_array_xor,
	mout_array_zip,
	mout_array,
	mout_collection_contains,
	mout_collection_every,
	mout_collection_filter,
	mout_collection_find,
	mout_collection_forEach,
	mout_collection_make_,
	mout_collection_map,
	mout_collection_max,
	mout_collection_min,
	mout_collection_pluck,
	mout_collection_reduce,
	mout_collection_reject,
	mout_collection_size,
	mout_collection_some,
	mout_collection,
	mout_date_dayOfTheYear,
	mout_date_diff,
	mout_date_i18n_de_DE,
	mout_date_i18n_en_US,
	mout_date_i18n_pt_BR,
	mout_date_i18n_ru,
	mout_date_i18n_,
	mout_date_isLeapYear,
	mout_date_isSame,
	mout_date_parseIso,
	mout_date_quarter,
	mout_date_startOf,
	mout_date_strftime,
	mout_date_timezoneAbbr,
	mout_date_timezoneOffset,
	mout_date_totalDaysInMonth,
	mout_date_totalDaysInYear,
	mout_date_weekOfTheYear,
	mout_date,
	mout_function_after,
	mout_function_awaitDelay,
	mout_function_bind,
	mout_function_compose,
	mout_function_constant,
	mout_function_debounce,
	mout_function_func,
	mout_function_identity,
	mout_function_makeIterator_,
	mout_function_memoize,
	mout_function_partial,
	mout_function_prop,
	mout_function_series,
	mout_function_throttle,
	mout_function_timeout,
	mout_function_times,
	mout_function_wrap,
	mout_function,
	mout_index,
	mout_lang_clone,
	mout_lang_createObject,
	mout_lang_ctorApply,
	mout_lang_deepClone,
	mout_lang_deepEquals,
	mout_lang_defaults,
	mout_lang_GLOBAL,
	mout_lang_inheritPrototype,
	mout_lang_is,
	mout_lang_isArguments,
	mout_lang_isArray,
	mout_lang_isBoolean,
	mout_lang_isDate,
	mout_lang_isEmpty,
	mout_lang_isFinite,
	mout_lang_isFunction,
	mout_lang_isInteger,
	mout_lang_isKind,
	mout_lang_isNaN,
	mout_lang_isnt,
	mout_lang_isNull,
	mout_lang_isNumber,
	mout_lang_isObject,
	mout_lang_isPlainObject,
	mout_lang_isPrimitive,
	mout_lang_isRegExp,
	mout_lang_isString,
	mout_lang_isUndefined,
	mout_lang_kindOf,
	mout_lang_toArray,
	mout_lang_toNumber,
	mout_lang_toString,
	mout_lang,
	mout_math_ceil,
	mout_math_clamp,
	mout_math_countSteps,
	mout_math_floor,
	mout_math_inRange,
	mout_math_isNear,
	mout_math_lerp,
	mout_math_loop,
	mout_math_map,
	mout_math_norm,
	mout_math_overflow,
	mout_math_round,
	mout_math,
	mout_number_abbreviate,
	mout_number_currencyFormat,
	mout_number_enforcePrecision,
	mout_number_isNaN,
	mout_number_MAX_INT,
	mout_number_MAX_SAFE_INTEGER,
	mout_number_MAX_UINT,
	mout_number_MIN_INT,
	mout_number_nth,
	mout_number_ordinal,
	mout_number_pad,
	mout_number_rol,
	mout_number_ror,
	mout_number_sign,
	mout_number_toInt,
	mout_number_toUInt,
	mout_number_toUInt31,
	mout_number,
	mout_object_bindAll,
	mout_object_contains,
	mout_object_deepFillIn,
	mout_object_deepMatches,
	mout_object_deepMixIn,
	mout_object_equals,
	mout_object_every,
	mout_object_fillIn,
	mout_object_filter,
	mout_object_find,
	mout_object_flatten,
	mout_object_forIn,
	mout_object_forOwn,
	mout_object_functions,
	mout_object_get,
	mout_object_has,
	mout_object_hasOwn,
	mout_object_keys,
	mout_object_map,
	mout_object_matches,
	mout_object_max,
	mout_object_merge,
	mout_object_min,
	mout_object_mixIn,
	mout_object_namespace,
	mout_object_omit,
	mout_object_pick,
	mout_object_pluck,
	mout_object_reduce,
	mout_object_reject,
	mout_object_result,
	mout_object_set,
	mout_object_size,
	mout_object_some,
	mout_object_unset,
	mout_object_values,
	mout_object,
	mout_queryString_contains,
	mout_queryString_decode,
	mout_queryString_encode,
	mout_queryString_getParam,
	mout_queryString_getQuery,
	mout_queryString_parse,
	mout_queryString_setParam,
	mout_queryString,
	mout_random_choice,
	mout_random_guid,
	mout_random_rand,
	mout_random_randBit,
	mout_random_randBool,
	mout_random_randHex,
	mout_random_randInt,
	mout_random_random,
	mout_random_randSign,
	mout_random_randString,
	mout_random,
	mout_string_camelCase,
	mout_string_contains,
	mout_string_crop,
	mout_string_endsWith,
	mout_string_escapeHtml,
	mout_string_escapeRegExp,
	mout_string_escapeUnicode,
	mout_string_hyphenate,
	mout_string_insert,
	mout_string_interpolate,
	mout_string_lowerCase,
	mout_string_lpad,
	mout_string_ltrim,
	mout_string_makePath,
	mout_string_normalizeLineBreaks,
	mout_string_pascalCase,
	mout_string_properCase,
	mout_string_removeNonASCII,
	mout_string_removeNonWord,
	mout_string_repeat,
	mout_string_replace,
	mout_string_replaceAccents,
	mout_string_rpad,
	mout_string_rtrim,
	mout_string_sentenceCase,
	mout_string_slugify,
	mout_string_startsWith,
	mout_string_stripHtmlTags,
	mout_string_stripMargin,
	mout_string_trim,
	mout_string_truncate,
	mout_string_typecast,
	mout_string_unCamelCase,
	mout_string_underscore,
	mout_string_unescapeHtml,
	mout_string_unescapeUnicode,
	mout_string_unhyphenate,
	mout_string_upperCase,
	mout_string_WHITE_SPACES,
	mout_string,
	mout_time_convert,
	mout_time_now,
	mout_time_parseMs,
	mout_time_toTimeString,
	mout_time
){
	console.log([module.id,'start'].join(':'));
	{//verify
		console.log('verify:');
		console.log(cyclejs.decycle(mout_array_append));
		console.log(cyclejs.decycle(mout_array_collect));
		console.log(cyclejs.decycle(mout_array_combine));
		console.log(cyclejs.decycle(mout_array_compact));
		console.log(cyclejs.decycle(mout_array_contains));
		console.log(cyclejs.decycle(mout_array_difference));
		console.log(cyclejs.decycle(mout_array_equals));
		console.log(cyclejs.decycle(mout_array_every));
		console.log(cyclejs.decycle(mout_array_filter));
		console.log(cyclejs.decycle(mout_array_find));
		console.log(cyclejs.decycle(mout_array_findIndex));
		console.log(cyclejs.decycle(mout_array_findLast));
		console.log(cyclejs.decycle(mout_array_findLastIndex));
		console.log(cyclejs.decycle(mout_array_flatten));
		console.log(cyclejs.decycle(mout_array_forEach));
		console.log(cyclejs.decycle(mout_array_groupBy));
		console.log(cyclejs.decycle(mout_array_indexOf));
		console.log(cyclejs.decycle(mout_array_indicesOf));
		console.log(cyclejs.decycle(mout_array_insert));
		console.log(cyclejs.decycle(mout_array_intersection));
		console.log(cyclejs.decycle(mout_array_invoke));
		console.log(cyclejs.decycle(mout_array_join));
		console.log(cyclejs.decycle(mout_array_last));
		console.log(cyclejs.decycle(mout_array_lastIndexOf));
		console.log(cyclejs.decycle(mout_array_map));
		console.log(cyclejs.decycle(mout_array_max));
		console.log(cyclejs.decycle(mout_array_min));
		console.log(cyclejs.decycle(mout_array_pick));
		console.log(cyclejs.decycle(mout_array_pluck));
		console.log(cyclejs.decycle(mout_array_range));
		console.log(cyclejs.decycle(mout_array_reduce));
		console.log(cyclejs.decycle(mout_array_reduceRight));
		console.log(cyclejs.decycle(mout_array_reject));
		console.log(cyclejs.decycle(mout_array_remove));
		console.log(cyclejs.decycle(mout_array_removeAll));
		console.log(cyclejs.decycle(mout_array_repeat));
		console.log(cyclejs.decycle(mout_array_reverse));
		console.log(cyclejs.decycle(mout_array_shuffle));
		console.log(cyclejs.decycle(mout_array_slice));
		console.log(cyclejs.decycle(mout_array_some));
		console.log(cyclejs.decycle(mout_array_sort));
		console.log(cyclejs.decycle(mout_array_sortBy));
		console.log(cyclejs.decycle(mout_array_split));
		console.log(cyclejs.decycle(mout_array_take));
		console.log(cyclejs.decycle(mout_array_toLookup));
		console.log(cyclejs.decycle(mout_array_union));
		console.log(cyclejs.decycle(mout_array_unique));
		console.log(cyclejs.decycle(mout_array_xor));
		console.log(cyclejs.decycle(mout_array_zip));
		console.log(cyclejs.decycle(mout_array));
		console.log(cyclejs.decycle(mout_collection_contains));
		console.log(cyclejs.decycle(mout_collection_every));
		console.log(cyclejs.decycle(mout_collection_filter));
		console.log(cyclejs.decycle(mout_collection_find));
		console.log(cyclejs.decycle(mout_collection_forEach));
		console.log(cyclejs.decycle(mout_collection_make_));
		console.log(cyclejs.decycle(mout_collection_map));
		console.log(cyclejs.decycle(mout_collection_max));
		console.log(cyclejs.decycle(mout_collection_min));
		console.log(cyclejs.decycle(mout_collection_pluck));
		console.log(cyclejs.decycle(mout_collection_reduce));
		console.log(cyclejs.decycle(mout_collection_reject));
		console.log(cyclejs.decycle(mout_collection_size));
		console.log(cyclejs.decycle(mout_collection_some));
		console.log(cyclejs.decycle(mout_collection));
		console.log(cyclejs.decycle(mout_date_dayOfTheYear));
		console.log(cyclejs.decycle(mout_date_diff));
		console.log(cyclejs.decycle(mout_date_i18n_de_DE));
		console.log(cyclejs.decycle(mout_date_i18n_en_US));
		console.log(cyclejs.decycle(mout_date_i18n_pt_BR));
		console.log(cyclejs.decycle(mout_date_i18n_ru));
		console.log(cyclejs.decycle(mout_date_i18n_));
		console.log(cyclejs.decycle(mout_date_isLeapYear));
		console.log(cyclejs.decycle(mout_date_isSame));
		console.log(cyclejs.decycle(mout_date_parseIso));
		console.log(cyclejs.decycle(mout_date_quarter));
		console.log(cyclejs.decycle(mout_date_startOf));
		console.log(cyclejs.decycle(mout_date_strftime));
		console.log(cyclejs.decycle(mout_date_timezoneAbbr));
		console.log(cyclejs.decycle(mout_date_timezoneOffset));
		console.log(cyclejs.decycle(mout_date_totalDaysInMonth));
		console.log(cyclejs.decycle(mout_date_totalDaysInYear));
		console.log(cyclejs.decycle(mout_date_weekOfTheYear));
		console.log(cyclejs.decycle(mout_date));
		console.log(cyclejs.decycle(mout_function_after));
		console.log(cyclejs.decycle(mout_function_awaitDelay));
		console.log(cyclejs.decycle(mout_function_bind));
		console.log(cyclejs.decycle(mout_function_compose));
		console.log(cyclejs.decycle(mout_function_constant));
		console.log(cyclejs.decycle(mout_function_debounce));
		console.log(cyclejs.decycle(mout_function_func));
		console.log(cyclejs.decycle(mout_function_identity));
		console.log(cyclejs.decycle(mout_function_makeIterator_));
		console.log(cyclejs.decycle(mout_function_memoize));
		console.log(cyclejs.decycle(mout_function_partial));
		console.log(cyclejs.decycle(mout_function_prop));
		console.log(cyclejs.decycle(mout_function_series));
		console.log(cyclejs.decycle(mout_function_throttle));
		console.log(cyclejs.decycle(mout_function_timeout));
		console.log(cyclejs.decycle(mout_function_times));
		console.log(cyclejs.decycle(mout_function_wrap));
		console.log(cyclejs.decycle(mout_function));
		console.log(cyclejs.decycle(mout_index));
		console.log(cyclejs.decycle(mout_lang_clone));
		console.log(cyclejs.decycle(mout_lang_createObject));
		console.log(cyclejs.decycle(mout_lang_ctorApply));
		console.log(cyclejs.decycle(mout_lang_deepClone));
		console.log(cyclejs.decycle(mout_lang_deepEquals));
		console.log(cyclejs.decycle(mout_lang_defaults));
		console.log(cyclejs.decycle(mout_lang_GLOBAL));
		console.log(cyclejs.decycle(mout_lang_inheritPrototype));
		console.log(cyclejs.decycle(mout_lang_is));
		console.log(cyclejs.decycle(mout_lang_isArguments));
		console.log(cyclejs.decycle(mout_lang_isArray));
		console.log(cyclejs.decycle(mout_lang_isBoolean));
		console.log(cyclejs.decycle(mout_lang_isDate));
		console.log(cyclejs.decycle(mout_lang_isEmpty));
		console.log(cyclejs.decycle(mout_lang_isFinite));
		console.log(cyclejs.decycle(mout_lang_isFunction));
		console.log(cyclejs.decycle(mout_lang_isInteger));
		console.log(cyclejs.decycle(mout_lang_isKind));
		console.log(cyclejs.decycle(mout_lang_isNaN));
		console.log(cyclejs.decycle(mout_lang_isnt));
		console.log(cyclejs.decycle(mout_lang_isNull));
		console.log(cyclejs.decycle(mout_lang_isNumber));
		console.log(cyclejs.decycle(mout_lang_isObject));
		console.log(cyclejs.decycle(mout_lang_isPlainObject));
		console.log(cyclejs.decycle(mout_lang_isPrimitive));
		console.log(cyclejs.decycle(mout_lang_isRegExp));
		console.log(cyclejs.decycle(mout_lang_isString));
		console.log(cyclejs.decycle(mout_lang_isUndefined));
		console.log(cyclejs.decycle(mout_lang_kindOf));
		console.log(cyclejs.decycle(mout_lang_toArray));
		console.log(cyclejs.decycle(mout_lang_toNumber));
		console.log(cyclejs.decycle(mout_lang_toString));
		console.log(cyclejs.decycle(mout_lang));
		console.log(cyclejs.decycle(mout_math_ceil));
		console.log(cyclejs.decycle(mout_math_clamp));
		console.log(cyclejs.decycle(mout_math_countSteps));
		console.log(cyclejs.decycle(mout_math_floor));
		console.log(cyclejs.decycle(mout_math_inRange));
		console.log(cyclejs.decycle(mout_math_isNear));
		console.log(cyclejs.decycle(mout_math_lerp));
		console.log(cyclejs.decycle(mout_math_loop));
		console.log(cyclejs.decycle(mout_math_map));
		console.log(cyclejs.decycle(mout_math_norm));
		console.log(cyclejs.decycle(mout_math_overflow));
		console.log(cyclejs.decycle(mout_math_round));
		console.log(cyclejs.decycle(mout_math));
		console.log(cyclejs.decycle(mout_number_abbreviate));
		console.log(cyclejs.decycle(mout_number_currencyFormat));
		console.log(cyclejs.decycle(mout_number_enforcePrecision));
		console.log(cyclejs.decycle(mout_number_isNaN));
		console.log(cyclejs.decycle(mout_number_MAX_INT));
		console.log(cyclejs.decycle(mout_number_MAX_SAFE_INTEGER));
		console.log(cyclejs.decycle(mout_number_MAX_UINT));
		console.log(cyclejs.decycle(mout_number_MIN_INT));
		console.log(cyclejs.decycle(mout_number_nth));
		console.log(cyclejs.decycle(mout_number_ordinal));
		console.log(cyclejs.decycle(mout_number_pad));
		console.log(cyclejs.decycle(mout_number_rol));
		console.log(cyclejs.decycle(mout_number_ror));
		console.log(cyclejs.decycle(mout_number_sign));
		console.log(cyclejs.decycle(mout_number_toInt));
		console.log(cyclejs.decycle(mout_number_toUInt));
		console.log(cyclejs.decycle(mout_number_toUInt31));
		console.log(cyclejs.decycle(mout_number));
		console.log(cyclejs.decycle(mout_object_bindAll));
		console.log(cyclejs.decycle(mout_object_contains));
		console.log(cyclejs.decycle(mout_object_deepFillIn));
		console.log(cyclejs.decycle(mout_object_deepMatches));
		console.log(cyclejs.decycle(mout_object_deepMixIn));
		console.log(cyclejs.decycle(mout_object_equals));
		console.log(cyclejs.decycle(mout_object_every));
		console.log(cyclejs.decycle(mout_object_fillIn));
		console.log(cyclejs.decycle(mout_object_filter));
		console.log(cyclejs.decycle(mout_object_find));
		console.log(cyclejs.decycle(mout_object_flatten));
		console.log(cyclejs.decycle(mout_object_forIn));
		console.log(cyclejs.decycle(mout_object_forOwn));
		console.log(cyclejs.decycle(mout_object_functions));
		console.log(cyclejs.decycle(mout_object_get));
		console.log(cyclejs.decycle(mout_object_has));
		console.log(cyclejs.decycle(mout_object_hasOwn));
		console.log(cyclejs.decycle(mout_object_keys));
		console.log(cyclejs.decycle(mout_object_map));
		console.log(cyclejs.decycle(mout_object_matches));
		console.log(cyclejs.decycle(mout_object_max));
		console.log(cyclejs.decycle(mout_object_merge));
		console.log(cyclejs.decycle(mout_object_min));
		console.log(cyclejs.decycle(mout_object_mixIn));
		console.log(cyclejs.decycle(mout_object_namespace));
		console.log(cyclejs.decycle(mout_object_omit));
		console.log(cyclejs.decycle(mout_object_pick));
		console.log(cyclejs.decycle(mout_object_pluck));
		console.log(cyclejs.decycle(mout_object_reduce));
		console.log(cyclejs.decycle(mout_object_reject));
		console.log(cyclejs.decycle(mout_object_result));
		console.log(cyclejs.decycle(mout_object_set));
		console.log(cyclejs.decycle(mout_object_size));
		console.log(cyclejs.decycle(mout_object_some));
		console.log(cyclejs.decycle(mout_object_unset));
		console.log(cyclejs.decycle(mout_object_values));
		console.log(cyclejs.decycle(mout_object));
		console.log(cyclejs.decycle(mout_queryString_contains));
		console.log(cyclejs.decycle(mout_queryString_decode));
		console.log(cyclejs.decycle(mout_queryString_encode));
		console.log(cyclejs.decycle(mout_queryString_getParam));
		console.log(cyclejs.decycle(mout_queryString_getQuery));
		console.log(cyclejs.decycle(mout_queryString_parse));
		console.log(cyclejs.decycle(mout_queryString_setParam));
		console.log(cyclejs.decycle(mout_queryString));
		console.log(cyclejs.decycle(mout_random_choice));
		console.log(cyclejs.decycle(mout_random_guid));
		console.log(cyclejs.decycle(mout_random_rand));
		console.log(cyclejs.decycle(mout_random_randBit));
		console.log(cyclejs.decycle(mout_random_randBool));
		console.log(cyclejs.decycle(mout_random_randHex));
		console.log(cyclejs.decycle(mout_random_randInt));
		console.log(cyclejs.decycle(mout_random_random));
		console.log(cyclejs.decycle(mout_random_randSign));
		console.log(cyclejs.decycle(mout_random_randString));
		console.log(cyclejs.decycle(mout_random));
		console.log(cyclejs.decycle(mout_string_camelCase));
		console.log(cyclejs.decycle(mout_string_contains));
		console.log(cyclejs.decycle(mout_string_crop));
		console.log(cyclejs.decycle(mout_string_endsWith));
		console.log(cyclejs.decycle(mout_string_escapeHtml));
		console.log(cyclejs.decycle(mout_string_escapeRegExp));
		console.log(cyclejs.decycle(mout_string_escapeUnicode));
		console.log(cyclejs.decycle(mout_string_hyphenate));
		console.log(cyclejs.decycle(mout_string_insert));
		console.log(cyclejs.decycle(mout_string_interpolate));
		console.log(cyclejs.decycle(mout_string_lowerCase));
		console.log(cyclejs.decycle(mout_string_lpad));
		console.log(cyclejs.decycle(mout_string_ltrim));
		console.log(cyclejs.decycle(mout_string_makePath));
		console.log(cyclejs.decycle(mout_string_normalizeLineBreaks));
		console.log(cyclejs.decycle(mout_string_pascalCase));
		console.log(cyclejs.decycle(mout_string_properCase));
		console.log(cyclejs.decycle(mout_string_removeNonASCII));
		console.log(cyclejs.decycle(mout_string_removeNonWord));
		console.log(cyclejs.decycle(mout_string_repeat));
		console.log(cyclejs.decycle(mout_string_replace));
		console.log(cyclejs.decycle(mout_string_replaceAccents));
		console.log(cyclejs.decycle(mout_string_rpad));
		console.log(cyclejs.decycle(mout_string_rtrim));
		console.log(cyclejs.decycle(mout_string_sentenceCase));
		console.log(cyclejs.decycle(mout_string_slugify));
		console.log(cyclejs.decycle(mout_string_startsWith));
		console.log(cyclejs.decycle(mout_string_stripHtmlTags));
		console.log(cyclejs.decycle(mout_string_stripMargin));
		console.log(cyclejs.decycle(mout_string_trim));
		console.log(cyclejs.decycle(mout_string_truncate));
		console.log(cyclejs.decycle(mout_string_typecast));
		console.log(cyclejs.decycle(mout_string_unCamelCase));
		console.log(cyclejs.decycle(mout_string_underscore));
		console.log(cyclejs.decycle(mout_string_unescapeHtml));
		console.log(cyclejs.decycle(mout_string_unescapeUnicode));
		console.log(cyclejs.decycle(mout_string_unhyphenate));
		console.log(cyclejs.decycle(mout_string_upperCase));
		console.log(cyclejs.decycle(mout_string_WHITE_SPACES));
		console.log(cyclejs.decycle(mout_string));
		console.log(cyclejs.decycle(mout_time_convert));
		console.log(cyclejs.decycle(mout_time_now));
		console.log(cyclejs.decycle(mout_time_parseMs));
		console.log(cyclejs.decycle(mout_time_toTimeString));
		console.log(cyclejs.decycle(mout_time));
	}
	{//basic usage
		console.log('basic usage:');
		console.log(mout_array_map([1, 2], function(val){ return val * val; })); // [1, 4]
	}
});
*/
//all
define([
	"module",
	"console",
	"cyclejs",
	"mout/index"
],function(
	module,
	console,
	cyclejs,
	mout
){
	console.log([module.id,'start'].join(':'));
	console.log(cyclejs.decycle(mout));
	try{//basic usage
		// you can load individual methods (recommended)
		var map = mout.object.map;
		map([1, 2], function(val){ return val * val; }); // [1, 4]
		// a single package
		var stringUtils = mout.string;
		stringUtils.camelCase('Foo Bar'); // "fooBar"
		// or the whole lib
		console.log( mout.math.clamp(17, 0, 10) ); // 10
	}catch(e){console.error(e.toString())};
});
